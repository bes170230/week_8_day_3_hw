{"ast":null,"code":"let token = '10c51b3297b61b9b254c2225ab61bee4c6c15da98c7e8416';\nexport const serverCalls = {\n  get: async () => {\n    const response = await fetch(`https://drone-guys.herokuapp.com/api/drones`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': `Bearer ${token}`\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch data from server');\n    }\n\n    return await response.json();\n  },\n  create: async function () {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const response = await fetch(`https://drone-guys.herokuapp.com/api/drones`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to Create new Data on Server');\n    }\n\n    return await response.json();\n  },\n  update: async function (id) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const response = await fetch(`https://drone-guys.herokuapp.com/api/drones/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    });\n  },\n  delete: async id => {\n    const response = await fetch(`https://drone-guys.herokuapp.com/api/drones/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': `Bearer ${token}`\n      }\n    });\n  }\n};","map":{"version":3,"names":["token","serverCalls","get","response","fetch","method","headers","ok","Error","json","create","data","body","JSON","stringify","update","id","delete"],"sources":["/home/brad/Documents/Coding Temple/week_8/day_3/car_inventory/src/api/server.ts"],"sourcesContent":["let token = '10c51b3297b61b9b254c2225ab61bee4c6c15da98c7e8416';\n\nexport const serverCalls = {\n    get: async () => {\n        const response = await fetch(`https://drone-guys.herokuapp.com/api/drones`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            }\n        });\n\n        if (!response.ok){\n            throw new Error('Failed to fetch data from server')\n        }\n        return await response.json()\n    },\n\n    create: async (data: any = {}) => {\n        const response = await fetch(`https://drone-guys.herokuapp.com/api/drones`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            },\n            body: JSON.stringify(data)\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to Create new Data on Server')\n        }\n\n        return await response.json()\n    },\n\n    update: async( id:string, data:any = {} ) => {\n        const response = await fetch(`https://drone-guys.herokuapp.com/api/drones/${id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            },\n            body: JSON.stringify(data)\n        });\n    },\n\n    delete: async ( id:string ) => {\n        const response = await fetch(`https://drone-guys.herokuapp.com/api/drones/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            },\n        });\n    }\n}"],"mappings":"AAAA,IAAIA,KAAK,GAAG,kDAAZ;AAEA,OAAO,MAAMC,WAAW,GAAG;EACvBC,GAAG,EAAE,YAAY;IACb,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6CAAF,EAAgD;MACxEC,MAAM,EAAE,KADgE;MAExEC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,kBAAmB,UAASN,KAAM;MAF7B;IAF+D,CAAhD,CAA5B;;IAQA,IAAI,CAACG,QAAQ,CAACI,EAAd,EAAiB;MACb,MAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;IACH;;IACD,OAAO,MAAML,QAAQ,CAACM,IAAT,EAAb;EACH,CAdsB;EAgBvBC,MAAM,EAAE,kBAA0B;IAAA,IAAnBC,IAAmB,uEAAP,EAAO;IAC9B,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,6CAAF,EAAgD;MACxEC,MAAM,EAAE,MADgE;MAExEC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,kBAAmB,UAASN,KAAM;MAF7B,CAF+D;MAMxEY,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;IANkE,CAAhD,CAA5B;;IASA,IAAI,CAACR,QAAQ,CAACI,EAAd,EAAkB;MACd,MAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;IACH;;IAED,OAAO,MAAML,QAAQ,CAACM,IAAT,EAAb;EACH,CA/BsB;EAiCvBM,MAAM,EAAE,gBAAOC,EAAP,EAAqC;IAAA,IAAnBL,IAAmB,uEAAR,EAAQ;IACzC,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,+CAA8CY,EAAG,EAAnD,EAAsD;MAC9EX,MAAM,EAAE,MADsE;MAE9EC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,kBAAmB,UAASN,KAAM;MAF7B,CAFqE;MAM9EY,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;IANwE,CAAtD,CAA5B;EAQH,CA1CsB;EA4CvBM,MAAM,EAAE,MAAQD,EAAR,IAAuB;IAC3B,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,+CAA8CY,EAAG,EAAnD,EAAsD;MAC9EX,MAAM,EAAE,QADsE;MAE9EC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,kBAAmB,UAASN,KAAM;MAF7B;IAFqE,CAAtD,CAA5B;EAOH;AApDsB,CAApB"},"metadata":{},"sourceType":"module"}