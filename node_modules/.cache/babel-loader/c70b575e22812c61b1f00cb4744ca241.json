{"ast":null,"code":"let token = '4fe74bddc2ddc2701b456f8d860f64cc19d84bd644895f0d';\nexport const serverCalls = {\n  get: async () => {\n    const response = await fetch(`https://drone-inventory-87.herokuapp.com/api/drones`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': `Bearer ${token}`\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch data from server');\n    }\n\n    return await response.json();\n  },\n  create: async function () {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const response = await fetch(`https://drone-inventory-87.herokuapp.com/api/drones`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to Create new Data on Server');\n    }\n\n    return await response.json();\n  },\n  update: async (id, data) => {\n    const response = await fetch(`https://drone-inventory-87.herokuapp.com/api/drones${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    });\n  }\n};","map":{"version":3,"names":["token","serverCalls","get","response","fetch","method","headers","ok","Error","json","create","data","body","JSON","stringify","update","id"],"sources":["/home/brad/Documents/Coding Temple/week_8/day_1/drone_inventory/src/api/server.ts"],"sourcesContent":["let token = '4fe74bddc2ddc2701b456f8d860f64cc19d84bd644895f0d';\n\nexport const serverCalls = {\n    get: async () => {\n        const response = await fetch(`https://drone-inventory-87.herokuapp.com/api/drones`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            }\n        });\n\n        if (!response.ok){\n            throw new Error('Failed to fetch data from server')\n        }\n        return await response.json()\n    },\n\n    create: async (data: any = {}) => {\n        const response = await fetch(`https://drone-inventory-87.herokuapp.com/api/drones`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            },\n            body: JSON.stringify(data)\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to Create new Data on Server')\n        }\n\n        return await response.json()\n    },\n\n    update: async( id:string, data:any ) => {\n        const response = await fetch(`https://drone-inventory-87.herokuapp.com/api/drones${id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            },\n            body: JSON.stringify(data)\n        });\n    }\n}"],"mappings":"AAAA,IAAIA,KAAK,GAAG,kDAAZ;AAEA,OAAO,MAAMC,WAAW,GAAG;EACvBC,GAAG,EAAE,YAAY;IACb,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qDAAF,EAAwD;MAChFC,MAAM,EAAE,KADwE;MAEhFC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,kBAAmB,UAASN,KAAM;MAF7B;IAFuE,CAAxD,CAA5B;;IAQA,IAAI,CAACG,QAAQ,CAACI,EAAd,EAAiB;MACb,MAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;IACH;;IACD,OAAO,MAAML,QAAQ,CAACM,IAAT,EAAb;EACH,CAdsB;EAgBvBC,MAAM,EAAE,kBAA0B;IAAA,IAAnBC,IAAmB,uEAAP,EAAO;IAC9B,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,qDAAF,EAAwD;MAChFC,MAAM,EAAE,MADwE;MAEhFC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,kBAAmB,UAASN,KAAM;MAF7B,CAFuE;MAMhFY,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;IAN0E,CAAxD,CAA5B;;IASA,IAAI,CAACR,QAAQ,CAACI,EAAd,EAAkB;MACd,MAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;IACH;;IAED,OAAO,MAAML,QAAQ,CAACM,IAAT,EAAb;EACH,CA/BsB;EAiCvBM,MAAM,EAAE,OAAOC,EAAP,EAAkBL,IAAlB,KAAgC;IACpC,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,sDAAqDY,EAAG,EAA1D,EAA6D;MACrFX,MAAM,EAAE,MAD6E;MAErFC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,kBAAmB,UAASN,KAAM;MAF7B,CAF4E;MAMrFY,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;IAN+E,CAA7D,CAA5B;EAQH;AA1CsB,CAApB"},"metadata":{},"sourceType":"module"}